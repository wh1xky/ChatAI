{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssistantFilesPage = exports.Files = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst core_1 = require(\"openai/core\");\nconst FilesAPI = __importStar(require(\"openai/resources/beta/assistants/files\"));\nconst pagination_1 = require(\"openai/pagination\");\nclass Files extends resource_1.APIResource {\n  /**\n   * Create an assistant file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to an\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n   */\n  create(assistantId, body, options) {\n    return this._client.post(`/assistants/${assistantId}/files`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves an AssistantFile.\n   */\n  retrieve(assistantId, fileId, options) {\n    return this._client.get(`/assistants/${assistantId}/files/${fileId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  list(assistantId, query = {}, options) {\n    if ((0, core_1.isRequestOptions)(query)) {\n      return this.list(assistantId, {}, query);\n    }\n    return this._client.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete an assistant file.\n   */\n  del(assistantId, fileId, options) {\n    return this._client.delete(`/assistants/${assistantId}/files/${fileId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\nexports.Files = Files;\nclass AssistantFilesPage extends pagination_1.CursorPage {}\nexports.AssistantFilesPage = AssistantFilesPage;\n(function (Files) {\n  Files.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Files = exports.Files || (exports.Files = {}));","map":{"version":3,"names":["resource_1","require","core_1","FilesAPI","__importStar","pagination_1","Files","APIResource","create","assistantId","body","options","_client","post","headers","retrieve","fileId","get","list","query","isRequestOptions","getAPIList","AssistantFilesPage","del","delete","exports","CursorPage"],"sources":["/Users/wh1skyne/WebstormProjects/ChatAI/Backend/node_modules/openai/src/resources/beta/assistants/files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from \"../../../core\";\nimport { APIResource } from \"../../../resource\";\nimport { isRequestOptions } from \"../../../core\";\nimport * as FilesAPI from \"./files\";\nimport { CursorPage, type CursorPageParams } from \"../../../pagination\";\n\nexport class Files extends APIResource {\n  /**\n   * Create an assistant file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to an\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n   */\n  create(\n    assistantId: string,\n    body: FileCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<AssistantFile> {\n    return this._client.post(`/assistants/${assistantId}/files`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves an AssistantFile.\n   */\n  retrieve(\n    assistantId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<AssistantFile> {\n    return this._client.get(`/assistants/${assistantId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of assistant files.\n   */\n  list(\n    assistantId: string,\n    query?: FileListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantFilesPage, AssistantFile>;\n  list(\n    assistantId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantFilesPage, AssistantFile>;\n  list(\n    assistantId: string,\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantFilesPage, AssistantFile> {\n    if (isRequestOptions(query)) {\n      return this.list(assistantId, {}, query);\n    }\n    return this._client.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Delete an assistant file.\n   */\n  del(\n    assistantId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<FileDeleteResponse> {\n    return this._client.delete(`/assistants/${assistantId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n}\n\nexport class AssistantFilesPage extends CursorPage<AssistantFile> {}\n\n/**\n * A list of [Files](https://platform.openai.com/docs/api-reference/files) attached\n * to an `assistant`.\n */\nexport interface AssistantFile {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The assistant ID that the file is attached to.\n   */\n  assistant_id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the assistant file was created.\n   */\n  created_at: number;\n\n  /**\n   * The object type, which is always `assistant.file`.\n   */\n  object: 'assistant.file';\n}\n\n/**\n * Deletes the association between the assistant and the file, but does not delete\n * the [File](https://platform.openai.com/docs/api-reference/files) object itself.\n */\nexport interface FileDeleteResponse {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'assistant.file.deleted';\n}\n\nexport interface FileCreateParams {\n  /**\n   * A [File](https://platform.openai.com/docs/api-reference/files) ID (with\n   * `purpose=\"assistants\"`) that the assistant should use. Useful for tools like\n   * `retrieval` and `code_interpreter` that can access files.\n   */\n  file_id: string;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * ending with obj_foo, your subsequent call can include before=obj_foo in order to\n   * fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport namespace Files {\n  export import AssistantFile = FilesAPI.AssistantFile;\n  export import FileDeleteResponse = FilesAPI.FileDeleteResponse;\n  export import AssistantFilesPage = FilesAPI.AssistantFilesPage;\n  export import FileCreateParams = FilesAPI.FileCreateParams;\n  export import FileListParams = FilesAPI.FileListParams;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAC,YAAA,CAAAH,OAAA;AACA,MAAAI,YAAA,GAAAJ,OAAA;AAEA,MAAaK,KAAM,SAAQN,UAAA,CAAAO,WAAW;EACpC;;;;;EAKAC,MAAMA,CACJC,WAAmB,EACnBC,IAAsB,EACtBC,OAA6B;IAE7B,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAeJ,WAAW,QAAQ,EAAE;MAC3DC,IAAI;MACJ,GAAGC,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAC,QAAQA,CACNN,WAAmB,EACnBO,MAAc,EACdL,OAA6B;IAE7B,OAAO,IAAI,CAACC,OAAO,CAACK,GAAG,CAAC,eAAeR,WAAW,UAAUO,MAAM,EAAE,EAAE;MACpE,GAAGL,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAcAI,IAAIA,CACFT,WAAmB,EACnBU,KAAA,GAA8C,EAAE,EAChDR,OAA6B;IAE7B,IAAI,IAAAT,MAAA,CAAAkB,gBAAgB,EAACD,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACD,IAAI,CAACT,WAAW,EAAE,EAAE,EAAEU,KAAK,CAAC;;IAE1C,OAAO,IAAI,CAACP,OAAO,CAACS,UAAU,CAAC,eAAeZ,WAAW,QAAQ,EAAEa,kBAAkB,EAAE;MACrFH,KAAK;MACL,GAAGR,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAS,GAAGA,CACDd,WAAmB,EACnBO,MAAc,EACdL,OAA6B;IAE7B,OAAO,IAAI,CAACC,OAAO,CAACY,MAAM,CAAC,eAAef,WAAW,UAAUO,MAAM,EAAE,EAAE;MACvE,GAAGL,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;;AAvEFW,OAAA,CAAAnB,KAAA,GAAAA,KAAA;AA0EA,MAAagB,kBAAmB,SAAQjB,YAAA,CAAAqB,UAAyB;AAAjED,OAAA,CAAAH,kBAAA,GAAAA,kBAAA;AAiEA,WAAiBhB,KAAK;EAGNA,KAAA,CAAAgB,kBAAkB,GAAGnB,QAAQ,CAACmB,kBAAkB;AAGhE,CAAC,EANgBhB,KAAK,GAALmB,OAAA,CAAAnB,KAAK,KAALmB,OAAA,CAAAnB,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}