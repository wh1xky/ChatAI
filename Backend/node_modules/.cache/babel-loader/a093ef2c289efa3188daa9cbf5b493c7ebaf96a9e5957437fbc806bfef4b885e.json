{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatCompletionRunner = void 0;\nconst AbstractChatCompletionRunner_1 = require(\"./AbstractChatCompletionRunner.js\");\nconst chatCompletionUtils_1 = require(\"./chatCompletionUtils.js\");\nclass ChatCompletionRunner extends AbstractChatCompletionRunner_1.AbstractChatCompletionRunner {\n  static runFunctions(completions, params, options) {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n  static runTools(completions, params, options) {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runTools(completions, params, options));\n    return runner;\n  }\n  _addMessage(message) {\n    super._addMessage(message);\n    if ((0, chatCompletionUtils_1.isAssistantMessage)(message) && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\nexports.ChatCompletionRunner = ChatCompletionRunner;","map":{"version":3,"names":["AbstractChatCompletionRunner_1","require","chatCompletionUtils_1","ChatCompletionRunner","AbstractChatCompletionRunner","runFunctions","completions","params","options","runner","_run","_runFunctions","runTools","_runTools","_addMessage","message","isAssistantMessage","content","_emit","exports"],"sources":["/Users/wh1skyne/WebstormProjects/ChatAI/Backend/node_modules/openai/src/lib/ChatCompletionRunner.ts"],"sourcesContent":["import {\n  type Completions,\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from \"../resources/chat/completions\";\nimport { type RunnableFunctions, type BaseFunctionsArgs, RunnableTools } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n  RunnerOptions,\n} from './AbstractChatCompletionRunner';\nimport { isAssistantMessage } from './chatCompletionUtils';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport type ChatCompletionToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs>;\n};\n\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner<ChatCompletionRunnerEvents> {\n  static runFunctions(\n    completions: Completions,\n    params: ChatCompletionFunctionRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n\n  static runTools(\n    completions: Completions,\n    params: ChatCompletionToolRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runTools(completions, params, options));\n    return runner;\n  }\n\n  override _addMessage(message: ChatCompletionMessageParam) {\n    super._addMessage(message);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content as string);\n    }\n  }\n}\n"],"mappings":";;;;;;AAMA,MAAAA,8BAAA,GAAAC,OAAA;AAKA,MAAAC,qBAAA,GAAAD,OAAA;AAoBA,MAAaE,oBAAqB,SAAQH,8BAAA,CAAAI,4BAAwD;EAChG,OAAOC,YAAYA,CACjBC,WAAwB,EACxBC,MAAiD,EACjDC,OAAuB;IAEvB,MAAMC,MAAM,GAAG,IAAIN,oBAAoB,EAAE;IACzCM,MAAM,CAACC,IAAI,CAAC,MAAMD,MAAM,CAACE,aAAa,CAACL,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC,CAAC;IACrE,OAAOC,MAAM;EACf;EAEA,OAAOG,QAAQA,CACbN,WAAwB,EACxBC,MAA6C,EAC7CC,OAAuB;IAEvB,MAAMC,MAAM,GAAG,IAAIN,oBAAoB,EAAE;IACzCM,MAAM,CAACC,IAAI,CAAC,MAAMD,MAAM,CAACI,SAAS,CAACP,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC,CAAC;IACjE,OAAOC,MAAM;EACf;EAESK,WAAWA,CAACC,OAAmC;IACtD,KAAK,CAACD,WAAW,CAACC,OAAO,CAAC;IAC1B,IAAI,IAAAb,qBAAA,CAAAc,kBAAkB,EAACD,OAAO,CAAC,IAAIA,OAAO,CAACE,OAAO,EAAE;MAClD,IAAI,CAACC,KAAK,CAAC,SAAS,EAAEH,OAAO,CAACE,OAAiB,CAAC;;EAEpD;;AA1BFE,OAAA,CAAAhB,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}